#include <iostream>
#include<bits/stdc++.h>

using namespace std;


void ancientalgo()
{
   int n,a,b,c,k=0,p;
   int L[n];
   string s;
   
   cin>>n;
   for(int i=0;i<n;i++)
   cin>>L[i];
   cin>>a>>b>>c;
   cin>>s;
     
   
   for(int i=0;i<n;i++)
   {
       k=i;
       p=n;
       if(s[i]=='R')                      //Case 1: If letter in string is R
       {
           
           while(k<n){
           swap(L[k++], L[--p]);
           
           }
       }
       
       else if(s[i]=='A')                 //Case 2: If letter in string is A
       {
           
           while(k<n){
           L[k]+=a;
           k++;
           //cout<<L[k];
           }
           
       }
       
       else if(s[i]=='M')                 //Case 3: If letter in string is M
       {
           while(k<n){
           L[k]= L[k] * b;
           k++;
           
           } 
           
       }
   }
   
   for(int i=0;i<n;i++)                   //Taking modulus with C
   {
       L[i]=L[i]%c;
   }
   for(int i=0;i<n;i++)
   cout<<L[i]<<" ";
}


int main()
{
   int t;
   cin>>t;
   
   while(t--)                      //Running for T test cases
   {
       ancientalgo();
       cout<<endl;
   }
   
   return 0;
}
